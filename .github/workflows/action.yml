name: Build

on: [push, pull_request]

jobs:
  build_wheels:
    name: >
      Build Wheel
      (${{ matrix.platform.os }}, ${{ matrix.platform.name }}, ${{ matrix.py }})
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
        - {os: ubuntu-latest, name: manylinux}
        - {os: ubuntu-latest, name: musllinux}
        - {os: macos-latest, name: macosx}
        py:
        - cp36
        - cp37
        - cp38
        - cp39
        - cp310
        - cp311

    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.10.2
        env:
          CIBW_ARCHS_LINUX: x86_64 aarch64
          CIBW_ARCHS_MACOS: x86_64 arm64

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
# name: CLIPSPy build job
# on: [push, pull_request]
# jobs:
#   build:
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         python-version: [3.6, 3.7, 3.8, 3.9]
#     steps:
#       - uses: actions/checkout@v2
#       - name: Set up Python ${{ matrix.python-version }}
#         uses: actions/setup-python@v2
#         with:
#           python-version: ${{ matrix.python-version }}
#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install --upgrade cffi pytest
#       - name: Build CLIPSPy
#         run: |
#           make
#       - name: Run tests
#         run: |
#           make test
