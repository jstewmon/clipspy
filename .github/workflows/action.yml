name: Build

on: [ push, pull_request ]

jobs:
  validate:
    name: Validate
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.7", "3.8", "3.9", "3.10", "3.11" ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache Clips
        id: cache-clips
        uses: actions/cache@v3
        with:
          path: clips_source
          key: ${{ runner.os }}-${{ hashFiles('Makefile') }}
      - name: Build Clips
        if: steps.cache-clips.outputs.cache-hit != 'true'
        run: make clips
      - name: Install Clips
        run: sudo make install-clips
      - name: Test
        run: >
          pip install -U pip setuptools pytest &&
          pip install -e . &&
          LD_LIBRARY_PATH=$LD_LIBRARY_PATH:clips_source pytest -v

  build_wheels:
    needs: validate
    # if: ${{ github.ref == 'refs/heads/master' }}
    name: Build Wheel
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        arch: [aarch64, x86_64, universal2]
        os:
          - ubuntu-latest
          - macos-latest
        py: [ cp37, cp38, cp39, cp310, cp311 ]
        include:
          - os: macos-latest
            name: macosx
          - os: ubuntu-latest
            name: manylinux
        exclude:
          - os: macos-latest
            arch: aarch64
          - os: macos-latest
            arch: x86_64
          - os: macos-latest
            py: cp37
          - os: ubuntu-latest
            arch: universal2

    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Cache Clips
        id: cache-clips
        if: runner.os == 'Linux'
        uses: actions/cache@v3
        with:
          path: clips_source
          key: ${{ matrix.name }}-${{ matrix.arch }}-${{ hashFiles('Makefile') }}

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.10.2
        env:
          CLIPS_SOURCE_DIR: '/host/${{ github.workspace }}/clips_source'
          CIBW_ENVIRONMENT_PASS_LINUX: CLIPS_SOURCE_DIR
          CIBW_ARCHS_LINUX: x86_64 aarch64
          CIBW_ARCHS_MACOS: universal2
          CIBW_BUILD: '${{ matrix.py }}-${{ matrix.name }}_${{ matrix.arch }}'
          CIBW_SKIP: 'cp36-*'
          CIBW_TEST_SKIP: "*-macosx_arm64 *-macosx_universal2:arm64"

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
